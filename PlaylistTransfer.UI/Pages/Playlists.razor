@page "/playlists"
@using AutoFixture
@using Microsoft.Extensions.Caching.Memory
@using PlaylistTransfer.Shared
@using PlaylistTransfer.UI.Data
@inject NavigationManager Navigation
@inject PlaylistState PlaylistState
@inject HttpClient Http
@inject IMemoryCache MemoryCache  

<h3>Spotify Playlists</h3>

@if (_playlists == null)
{
<p>Loading playlists...</p>
}
else if (_playlists.Count == 0)
{
<p>No playlists found.</p>
}
else
{
<div class="playlist-grid">
    @foreach (var playlist in _playlists)
    {
    <PlaylistCard Playlist="playlist" />
    }
</div>
<button class="btn btn-primary" @onclick="ProceedToAppleMusic">Post to Apple Music</button>
}

@code {
private List<PlaylistItems> _playlists = null!;
private const string CacheKey = "playlists";  // Define a cache key
private string? accessToken;
protected override async Task OnInitializedAsync()
{
try
{
    // Get accessToken from query string
    var uri = Navigation.Uri;
    var uriQuery = new Uri(uri).Query;
    var queryParams = System.Web.HttpUtility.ParseQueryString(uriQuery);
    accessToken = queryParams["accessToken"]; // Get the access token from the query string
// Try to get the cached playlists if available
if (!MemoryCache.TryGetValue(CacheKey, out _playlists))
{
// If cache doesn't exist, fetch playlists from the API
var request = new HttpRequestMessage(HttpMethod.Get, "api/Spotify/GetPlaylists");
request.Headers.Add("accessToken", accessToken);

var response = await Http.SendAsync(request);
if (response.IsSuccessStatusCode)
{
_playlists = await response.Content.ReadFromJsonAsync<List<PlaylistItems>>() ?? new();

// Set the cache for 2 minutes
MemoryCache.Set(CacheKey, _playlists, TimeSpan.FromMinutes(30));
}
else
{
Console.WriteLine($"Error: {response.StatusCode}");
}
}

PlaylistState.SelectedPlaylists = _playlists;
}
catch (Exception ex)
{
Console.WriteLine($"Error fetching playlists: {ex.Message}");
}
}

private void ProceedToAppleMusic()
{
PlaylistState.SelectedPlaylists = _playlists.Where(p => p.IsSelected).ToList();
Navigation.NavigateTo("/apple-music", true);
}
}
